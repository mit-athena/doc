For the most part, third-party software is easy to locate because it
is found in the third hierarchy.  Nevertheless, it's a good idea to
keep track of what we get from outside, especially for things outside
of third.  There are also some notes at the end of this file on how we
deal with building third-party software.

Third-party stuff not under third
---------------------------------

	* packs/config/named.root

		This file contains the named.root file available at
		rs.internic.edu:/domain/named.root.

	* packs/config/Dash.fallback

		A fallback copy of
		/afs/athena.mit.edu/system/dash/Dash.menus for when
		the master copy is inaccessible.  This should be
		updated at release time.

Distribution sites for software under third
-------------------------------------------

	afsbin		See our Transarc site contacts.
	cns		Previously we've talked to people we know at
			Cygnus; the official channels involve signing
			some ITAR-related paperwork.
	emacs		prep.ai.mit.edu:pub/gnu
	gcc		prep.ai.mit.edu:pub/gnu
	jot		From NetBSD (ftp.netbsd.org), usr.bin/jot
	krb5		athena-dist.mit.edu:pub/kerberos
	lam		From NetBSD (ftp.netbsd.org), usr.bin/lam
	look		From NetBSD (ftp.netbsd.org), usr.bin/look
	mh		ftp.ics.uci.edu:pub/mh
	tcsh		ftp.deshaw.com:pub/tcsh
			(Old versions at ftp.uu.net:pub/shells/tcsh)
	patch		prep.ai.mit.edu:pub/gnu
	perl		prep.ai.mit.edu:pub/gnu
	rcs		prep.ai.mit.edu:pub/gnu
	rs		From NetBSD (ftp.netbsd.org), usr.bin/rs
	sysinfo		usc.edu:pub/sysinfo
	talk		From NetBSD (ftp.netbsd.org)
			usr.bin/talk goes in the talk subdirectory
			libexec/talkd goes in the talkd subdirectory
			protocols/talkd.h is from include/protocols,
			 with some modifications for portability.
	tex		Any CTAN mirror (e.g. ftp.duke.edu:/tex-archive,
			ftp.cdrom.com:pub/tex/ctan).  We want:
				- dvips from dviware/dvips
				- xdvi from dviware/xdvi
				- web2c from systems/web2c
				- web from systems/web2c
			Untar web2c and web (they will untar into the same
			directory), and import that into third/tex/web2c.
			Untar xdvi and import that into third/tex/xdvi.
			Untar dvips in its own directory (it untars into
			the current directory) and import that into
			third/tex/dvips.
			[And then there are fonts...]
	top		eecs.nwu.edu:pub/top
	transcript	From Adobe
	wcl		ftp.x.org:contrib/devel_tools
	whois		From NetBSD (ftp.netbsd.org), usr.bin/whois
	x3270		ftp.x.org:contrib/applications/x3270

Third-party build systems
-------------------------

There are two avenues one can take for building third-party software:

	* You can use the native build system.

	* You can declare the native build system a loss, and use one
	  of the two Athena build systems described in the file
	  "build-system" in this directory.  This option is not
	  preferred, but is necessary in cases like afsbin (where we
	  are simply installing target files) or software imported
	  from NetBSD.

In a some cases, the native build system may already conform to the
Athena build system (a configure script which needs no special options
for the Athena environment besides those given in our site.def file),
but generally you will have to write a Makefile.athena file specifying
how to build and install the program.  A Makefile.athena file must
have the following targets:

	configure	Prepare to build the source tree
	clean		Remove files generated by the all target
	all		Generate all automatically build files
	check		Perform automatic tests, if any
	install		Install the software in $SRVD.

A Makefile.athena file may rely on the following environment variables
(it is most robust to use `"$$VARNAME"' instead of `"${VARNAME}"' in
rules to get the value of such variables):

	ATHENA_SYS	Architecture name for this system
	HOSTTYPE	Platform name for this system
	SRVD		Install destination directory (e.g. /srvd)
	SOURCE		Source tree (e.g. /source0
	COMPILER	Appropriate compiler for this system
	CONFIGDIR	Location of Athena Imake templates
	XCONFIGDIR	Location of X-style Imake templates

Following is a sample Makefile.athena file, used to build a package
which uses an X-style Imakefile:

	# $Id: $

	SHELL=/bin/sh

	configure:
		imake "-I$$XCONFIGDIR" -DUseInstalled "-DSRCDIR=$$SOURCE"
		${MAKE} Makefiles

	clean:
		${MAKE} clean

	all:
		${MAKE} includes depend all

	check:

	install:
		${MAKE} install DESTDIR="$$SRVD"
